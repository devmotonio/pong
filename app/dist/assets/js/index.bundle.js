/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./app/src/js/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n;// CONCATENATED MODULE: ./app/src/js/paddle.js\nclass Paddle {\r\n  constructor(game, isLeft) {\r\n    this.width = Math.floor(game.canvas.height * 0.02);\r\n    this.height = Math.floor(game.canvas.height * 0.1);\r\n    this.speed = 10;\r\n    this.direction = 0;\r\n    this.pad = 10;\r\n    this.enabled = false;\r\n    this.canvasY1 = this.pad;\r\n    this.canvasY2 = game.canvas.height - this.height - this.pad;\r\n    this.positionX = isLeft ? this.pad : game.canvas.width - this.width - this.pad;\r\n    this.positionY = this.pad;\r\n    this.areaX1 = this.positionX;\r\n    this.areaX2 = this.positionX + this.width;\r\n    this.areaY1 = 0;\r\n    this.areaY2 = 0;\r\n  }\r\n\r\n  moveUp() {\r\n    this.direction = -this.speed;\r\n  }\r\n\r\n  moveDown() {\r\n    this.direction = this.speed;\r\n  }\r\n\r\n  move() {\r\n    if (this.enabled) {\r\n      this.positionY += this.direction;\r\n      if (this.positionY < this.canvasY1) {\r\n        this.positionY = this.canvasY1;\r\n      }\r\n      if (this.positionY > this.canvasY2) {\r\n        this.positionY = this.canvasY2;\r\n      }\r\n      this.areaY1 = this.positionY;\r\n      this.areaY2 = this.positionY + this.height;\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.direction = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = '#fff';\r\n    ctx.fillRect(this.positionX, this.positionY, this.width, this.height);\r\n  }\r\n\r\n  animate(ctx) {\r\n    this.move();\r\n    this.draw(ctx);\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./app/src/js/ball.js\nclass Ball {\r\n  constructor(game) {\r\n    this.game = game;\r\n    this.positionX = Math.floor(this.game.canvas.width / 2);\r\n    this.positionY = Math.floor(this.game.canvas.height / 2);\r\n    this.speedX = this.game.speedX;\r\n    this.speedY = this.game.speedY;\r\n    this.directionX = this.game.directionX;\r\n    this.directionY = this.game.directionY;\r\n    this.size = Math.floor(this.game.canvas.height * 0.03);\r\n    this.hitSound = new Audio('./assets/audio/hit.mp3');\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = '#f00';\r\n    ctx.fillRect(this.positionX, this.positionY, this.size, this.size);\r\n  }\r\n\r\n  move() {\r\n    if (this.directionX > 0) {\r\n      this.game.paddleL.enabled = false;\r\n      this.game.paddleR.enabled = true;\r\n    } else {\r\n      this.game.paddleL.enabled = true;\r\n      this.game.paddleR.enabled = false;\r\n    }\r\n\r\n    //check top border collision\r\n    if (this.directionY < 0 && this.positionY < 0) {\r\n      this.hitBorder(this.speedY);\r\n    }\r\n\r\n    // check bottom border collision\r\n    if (this.directionY > 0 && this.positionY + this.size > this.game.canvas.height) {\r\n      this.hitBorder(-this.speedY);\r\n    }\r\n\r\n    //check collision on Left Paddle\r\n    if (\r\n      this.checkHitY(this.game.paddleL) &&\r\n      this.positionX > this.game.paddleL.areaX1 &&\r\n      this.positionX < this.game.paddleL.areaX2\r\n    ) {\r\n      this.hitPaddle(this.speedX);\r\n    }\r\n\r\n    //check collision on Left Wall\r\n    if (this.directionX < 0 && this.positionX + this.size < 0) {\r\n      this.game.reset();\r\n    }\r\n\r\n    //check collision on Righ Paddle\r\n    if (\r\n      this.checkHitY(this.game.paddleR) &&\r\n      this.positionX + this.size > this.game.paddleR.areaX1 &&\r\n      this.positionX + this.size < this.game.paddleR.areaX2\r\n    ) {\r\n      this.hitPaddle(-this.speedX);\r\n    }\r\n\r\n    //check collision on Righ Wall\r\n    if (this.directionX > 0 && this.positionX > this.game.canvas.width) {\r\n      this.game.reset();\r\n    }\r\n\r\n    //move\r\n    this.positionX += this.directionX;\r\n    this.positionY += this.directionY;\r\n  }\r\n\r\n  animate(ctx) {\r\n    this.move();\r\n    this.draw(ctx);\r\n  }\r\n\r\n  speedUpY() {\r\n    this.speedY += 0.5;\r\n  }\r\n\r\n  speedUpX() {\r\n    this.speedX += 0.5;\r\n  }\r\n\r\n  hitPaddle(speedX) {\r\n    this.speedUpX();\r\n    this.directionX = speedX;\r\n    this.hitSound.play();\r\n  }\r\n\r\n  hitBorder(speedY) {\r\n    this.speedUpY();\r\n    this.directionY = speedY;\r\n    this.hitSound.play();\r\n  }\r\n\r\n  checkHitY(paddle) {\r\n    return (\r\n      (this.positionY > paddle.areaY1 && this.positionY < paddle.areaY2) ||\r\n      (this.positionY + this.size > paddle.areaY1 && this.positionY + this.size < paddle.areaY2)\r\n    );\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./app/src/js/input.js\nclass InputHandler {\r\n  constructor(paddle1, paddle2) {\r\n    document.addEventListener('keydown', (event) => {\r\n      switch (event.keyCode) {\r\n        case 38: {\r\n          paddle1.moveUp();\r\n          paddle2.moveUp();\r\n          break;\r\n        }\r\n\r\n        case 40: {\r\n          paddle1.moveDown();\r\n          paddle2.moveDown();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    document.addEventListener('keyup', (event) => {\r\n      switch (event.keyCode) {\r\n        case 38: {\r\n          if (paddle1.direction < 0) paddle1.stop();\r\n          if (paddle2.direction < 0) paddle2.stop();\r\n          break;\r\n        }\r\n\r\n        case 40: {\r\n          if (paddle1.direction > 0) paddle1.stop();\r\n          if (paddle2.direction > 0) paddle2.stop();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./app/src/js/game.js\n\r\n\r\n\r\n\r\nclass Game {\r\n  constructor(height) {\r\n    this.canvas = document.getElementById('gameScreen');\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.divSide = document.getElementById('side');\r\n    this.rank = [];\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n    this.directionX = 0;\r\n    this.directionY = 0;\r\n\r\n    this.canvas.width = Math.floor(window.innerWidth * 0.8);\r\n    this.canvas.height = height;\r\n    this.canvas.style.float = 'left';\r\n    this.canvas.style.backgroundColor = '#000';\r\n\r\n    this.divSide.style.float = 'left';\r\n    this.divSide.style.textAlign = 'center';\r\n    this.divSide.style.width = `${Math.floor(window.innerWidth * 0.18)}px`;\r\n  }\r\n\r\n  init() {\r\n    this.speedX = Math.floor(Math.random() * 4) + 3;\r\n    this.speedY = Math.floor(Math.random() * 4) + 3;\r\n    this.directionX = Math.random() < 0.5 ? -this.speedX : this.speedX;\r\n    this.directionY = Math.random() < 0.5 ? -this.speedY : this.speedY;\r\n    \r\n    this.startTime = new Date();\r\n\r\n    this.ball = new Ball(this);\r\n    this.paddleL = new Paddle(this, true);\r\n    this.paddleR = new Paddle(this, false);\r\n    this.gameObjects = [this.ball, this.paddleL, this.paddleR];\r\n\r\n    new InputHandler(this.paddleL, this.paddleR);\r\n  }\r\n\r\n  reset() {\r\n    let divRank = document.getElementById('rank');\r\n    this.rank.push(this.currentTimer);\r\n    this.rank.sort();\r\n    this.rank.reverse();\r\n    if (this.rank.length > 5) {\r\n      this.rank.pop();\r\n    }\r\n    divRank.innerHTML = '';\r\n    this.rank.forEach((timer) => {\r\n      divRank.innerHTML += '<p>' + this.formatTimer(timer) + '</p>';\r\n    });\r\n    this.init();\r\n  }\r\n\r\n  animate() {\r\n    this.currentTimer = new Date(new Date() - this.startTime.getTime());\r\n    this.timer = this.formatTimer(this.currentTimer);\r\n    document.getElementById('timer').innerHTML = this.timer;\r\n\r\n    this.gameObjects.forEach((object) => object.animate(this.ctx));\r\n  }\r\n\r\n  formatTimer(timer) {\r\n    let hour = timer.getUTCHours();\r\n    let minute = timer.getUTCMinutes();\r\n    let second = timer.getUTCSeconds();\r\n    let fHour = hour < 10 ? '0' + hour : hour;//hour < 0 ? '00' : \r\n    let fMinute = minute < 10 ? '0' + minute : minute;\r\n    let fSecond = second < 10 ? '0' + second : second;\r\n    return fHour + ':' + fMinute + ':' + fSecond;\r\n  }\r\n\r\n  gameLoop() {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.animate();\r\n\r\n    requestAnimationFrame((timestamp) => {\r\n      this.gameLoop();\r\n    });\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    requestAnimationFrame((timestamp) => {\r\n      this.gameLoop();\r\n    });\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./app/src/js/index.js\n\r\n\r\nlet game = new Game(520);\r\ngame.start();\n\n//# sourceURL=webpack:///./app/src/js/index.js_+_4_modules?")}},__webpack_require__={r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}},__webpack_exports__={};__webpack_modules__["./app/src/js/index.js"](0,__webpack_exports__,__webpack_require__)})();